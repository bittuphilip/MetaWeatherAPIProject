<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-01-25T02:06:55 IST" name="Default suite" finished-at="2021-01-25T02:07:04 IST" duration-ms="8982">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.testRunner@7722c3c3]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2021-01-25T02:06:55 IST" name="Default test" finished-at="2021-01-25T02:07:04 IST" duration-ms="8982">
      <class name="testRunner.testRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:testRunner.testRunner@7722c3c3]" started-at="2021-01-25T02:06:55 IST" name="setUpClass" finished-at="2021-01-25T02:06:57 IST" duration-ms="1883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.testRunner@7722c3c3]" started-at="2021-01-25T02:06:57 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-01-25T02:07:00 IST" duration-ms="3476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Retreive weather details for "Nottingham" and for any day"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Retreiving Weather details of any Place]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.testRunner@7722c3c3]" started-at="2021-01-25T02:07:00 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-01-25T02:07:01 IST" duration-ms="802" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Retreive weather details for "London" and for any day"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Retreiving Weather details of any Place]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.testRunner@7722c3c3]" started-at="2021-01-25T02:07:01 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-01-25T02:07:03 IST" duration-ms="1650" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Retreive weather details for "Oxford" and for any day"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Retreiving Weather details of any Place]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.testRunner@7722c3c3]" started-at="2021-01-25T02:07:03 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-01-25T02:07:03 IST" duration-ms="210" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the duplicacy of PlaceID for "Birmingham""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Validate if PlaceID is returned multiple times for any Place]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at stepdefinitions.GetWeatherDetails.verify_count_is_equal_to_for_the_given_place(GetWeatherDetails.java:85)
at âœ½.Verify "WEOID" count is Equal to 1 for the given place(file:///C:/BDD_Workspace/MetaWeatherAPITestProject/src/test/resources/AppFeatures/VerifyPlaceID.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunner.testRunner@7722c3c3]" started-at="2021-01-25T02:07:03 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-01-25T02:07:03 IST" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the duplicacy of PlaceID for "Nottingham""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Validate if PlaceID is returned multiple times for any Place]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:testRunner.testRunner@7722c3c3]" started-at="2021-01-25T02:07:03 IST" name="tearDownClass" finished-at="2021-01-25T02:07:04 IST" duration-ms="528" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- testRunner.testRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
